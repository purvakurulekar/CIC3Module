// interface ILogAPI {
//     constants: ILogAPIConstants;
//     getCount(): number;
//     listEntries(type?: LOG_TYPE_ENUM, nbLogs?: number, offset?: number): Array<ILogEntry>;
//     getStats(): ILoggerStats;
//     reset(): void;
//     registerToChanges(func: Function): void;
//     unregisterToChanges(func: Function): void;
// }

/**
 * The interface for the log constants.
 */
interface ILogAPIConstants {
    LOG_TYPE_ENUM: typeof LOG_TYPE_ENUM
}

/**
 * The constants for the logger.
 */
declare enum LOG_TYPE_ENUM {
    network = 0,
    apiCall = 1
}

/**
 * The interface for the log entry.
 */
interface ILogEntry {
    /**The message.*/
    msg: string,

    /**The time.*/
    time: number,

    /**The log type.*/
    type: number,

    /**The requester identifier.*/
    requesterId?: string,

    /**The created date.*/
    createdOn: number
}

/**
 * The interface for the log stats.
 */
interface ILoggerStats {
    /**The global entry count.*/
    globalEntryCount: number,

    /**The global entry minimum.*/
    globalEntryMin: number,

    /**The global entry maximum.*/
    globalEntryMax: number,
    
    /**The global entry total timing.*/
    globalEntryTotalTimings: number,

    /**The basic stats object.*/
    network: IBasicStats,

    /**The logger type stats object.*/
    api: IAPILoggerTypeStats
}

/**
 * The interface for the logger type stats.
 */
interface IAPILoggerTypeStats {
    /**The minimum time.*/
    minTime: number,

    /**The maximum time.*/
    maxTime: number,

    /**The entry count.*/
    entryCount: number,

    /**The total entry time.*/
    totalEntryTime: number,

    /**The api logger namespace object.*/
    namespace: IAPINamespaceLoggerStats;
}

/**
 * The interface for the api logger namespace.
 */
interface IAPINamespaceLoggerStats {
    /**The core stats object.*/
    core: IBasicStats,

    /**The content stats object.*/
    content: IBasicStats,

    /**The design stats object.*/
    design: IBasicStats,

    /**The cache stats object.*/
    cache: IBasicStats
}

/**
 * The interface for the basic stats.
 */
interface IBasicStats {
    /**The minimum time.*/
    minTime: number,

    /**The maximum time.*/
    maxTime: number,

    /**The entry count.*/
    entryCount: number,

    /**The total entry time.*/
    totalEntryTime: number
}

/**
 * The interface for the logger type stats.
 */
interface IAvgTimings {
    /**The minimum time.*/
    min: number,

    /**The average time.*/
    avg: number,

    /**The maximum time.*/
    max: number
}