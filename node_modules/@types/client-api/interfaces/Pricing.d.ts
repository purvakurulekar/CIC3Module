/**
 * The interface for the options for the api getItemPricingReport().
 */
 interface IOptionsGetItemPricingReport {
    /**Whether to only include the total prices.*/
    totalOnly?: boolean;

    /**Whether to only include mandatory extra items in the reportItems section.*/
    mandatoryItemsOnly?: boolean;

    /**The custom data for the request.*/
    customData?: string;
}

/**
 * The interface for the return from the api getItemPricingReport().
 */
interface IItemPricingReport {
    /**The array of report items containing the pricing information for the passed up client items.*/
    reportItems?: Array<IPricingReportItem>,

    /**The total price of all items in the report.*/
    totalPrice: number,

    /**The currency code used for the prices in the report.*/
    currencyCode?: string,

    /**The array of errors for the report, relating to the requested items.*/
    errors: Array<IPricingReportMessage>,

    /**The array of warnings for the report, relating to the requested items.*/
    warnings: Array<IPricingReportMessage>,

    /**The array of notes for the report, relating to the requested items.*/
    notes: Array<IPricingReportMessage>,
}

/**
 * The interface for the pricing report message, used for errors/warnings/notes in the IItemPricingReport.
 */
interface IPricingReportMessage {
    /**The source item Ids this message relates to.*/
    sourceItems: Array<string>,

    /**The unique code for the message.*/
    code: string,

    /**The content of the message.*/
    message: string
}

/**
 * The interface for the item attributes.
 */
interface IItemAttributes {
    [key: string]: string
}

/**
 * The interface for the pricing report item, returned in the IItemPricingReport.
 */
interface IPricingReportItem {
    /**The catalog Id the report item relates to.*/
    catalogId: string,

    /**The array of source item Ids this report item is for.*/
    sourceItems?: Array<string>,

    /** @ignore
     * The name of the item.*/
    name?: string,

    /** @ignore
     * The classification interface for the item.*/
    classification?: IClassification,

    /** @ignore
     * The descriptions for the item.*/
    descriptions?: IDescriptions,

    /** @ignore
     * The dimensions for the item.*/
    dimensions?: Dimensions,

    /** @ignore
     * Whether the item is mandatory to add.*/
    mandatory?: boolean,

    /**The quantity of the report item to have.*/
    quantity: number,

    /**The quantity of a source item that is contributing to a pack*/
    quantityPerPack?: number,

    /**The price of the report item*/
    price: number,

    /**The list of external codes used for the report item.*/
    externalCodes?: IExternalCodes,

    /** @ignore
     * The list of attributes passed up for the source item.*/
    attributes?: IItemAttributes, // Are these needed??? 

    /** @ignore
     * The tags relevant to the report item.*/
    tags?: Array<string>,

    /**The list of package items that related to this report item.*/
    packagedItems?: Array<IPackageDetailItem>,

    /** @ignore
     * The list of features for the item.*/
    features?: Array<IFeature>
}

/**
 * The interface for the package detail item; present when packaging is applied in the report.
 */
interface IPackageDetailItem {
    /**The catalog Id the package item relates to.*/
    catalogId: string,

    /**The list of source items the package item is related to.*/
    sourceItems?: Array<string>,

    /**The quantity of the package item being applied.*/
    quantity: number,

    /**The list of external codes being used for the package item.*/
    externalCodes?: IExternalCodes,

    /** @ignore
     * The list of attributes passed up for the source item.*/
    attributes?: IItemAttributes
}
