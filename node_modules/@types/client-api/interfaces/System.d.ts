/**
 * @internal
 */
interface ICiCAPIInitOptions {
    apiSrcUrl?: string,
    storageHandler?: IStorageHandler,
    httpAgents?: IHTTPAgentsOptions // Used internally in desktop service context.
}

/**
 * @internal
 */
interface IStorageHandler {
    addToStorage(storeName: string, key: string, value: any): Promise<unknown>,
    getFromStorage(storeName?: string, key?: string): Promise<any>,
    clearStorage(storeName?: string): Promise<unknown>
}

/**
 * @internal
 */
interface IHTTPAgentsOptions {
    httpAgent: any; 
    httpsAgent: any;
}

/**
 * @internal
 */
interface IConfig {
    version: number,
    viewer3d: IViewer3DConfig,
    contentPlatform: IContentPlatformConfig
}
/**
 * @internal
 */
interface IContentPlatformConfig { // Internal config - not to be exposed to consuming applications
    baseApiUrl: string,
    catalogsApiUrl: string,
    groupsApiUrl: string,
    itemsApiUrl: string,
    featuresApiUrl: string,
    restrictionsApiUrl: string,
    attributesApiUrl: string,
    itemGetSpecApiUrl: string,
    propertiesApiUrl: string,
    geometriesApiUrl: string,
    imagesBaseUrl: string,
    showHiddenContent: boolean, // Could be moved to Browser config + option on related APIs
}

/**
 * @internal
 */
interface IViewer3DConfig { // Should be moved to Viewer3D
    engine3DBaseUrl: string,
    default3DEngineMainFile: string,
    default3DEngineWASMFile: string,
    default3DEngineWorkerFile: string,
    hostRoomLoaderRelUrl: string,
    hostRoomRelUrl: string
}

/**
 * @internal
 */
interface IFeatureTypes {
    ITEM_MODIFICATION: string,
    ENUMERATED: string,
    NUMERICAL: string,
    TOGGLE: string,
    CONFIGURATION_STATE_ONLY: string
}

/**
 * @internal
 */
type ConfigMap = Map<string, string | number | boolean | ConfigMap | void>;

/**
 * @internal
 */
type ConfigValue = string | number | boolean | ConfigMap | void;

/**
 * @internal
 */
interface IContentConstants {
    FEATURE_TYPES: IFeatureTypes;
    CATALOG_STATUS: typeof CATALOG_STATUS;
    ITEM_UPDATE_TYPE: typeof ITEM_UPDATE_TYPE;
}